@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddAppointmentCommandParser" as AddAppointmentCommandParser LOGIC_COLOR
participant "a:AddAppointmentCommand" as AddAppointmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "p:Patient" as Patient MODEL_COLOR
end box

[-> LogicManager : execute("appointment 1 d/31-12-2099 t/15:30 note/checkup")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("appointment 1 d/31-12-2099 t/15:30 note/checkup")
activate AddressBookParser

create AddAppointmentCommandParser
AddressBookParser -> AddAppointmentCommandParser
activate AddAppointmentCommandParser

AddAppointmentCommandParser --> AddressBookParser
deactivate AddAppointmentCommandParser

AddressBookParser -> AddAppointmentCommandParser : parse("1 d/31-12-2099 t/15:30 note/checkup")
activate AddAppointmentCommandParser

create AddAppointmentCommand
AddAppointmentCommandParser -> AddAppointmentCommand
activate AddAppointmentCommand

AddAppointmentCommand --> AddAppointmentCommandParser : a
deactivate AddAppointmentCommand

AddAppointmentCommandParser --> AddressBookParser : a
deactivate AddAppointmentCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
AddAppointmentCommandParser -[hidden]-> AddressBookParser
destroy AddAppointmentCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> AddAppointmentCommand : execute()
activate AddAppointmentCommand

AddAppointmentCommand -> Model : getFilteredPersonList()
activate Model

Model --> AddAppointmentCommand
deactivate Model

AddAppointmentCommand -> Model : addAppointment(person, "31-12-2099", "15:30", note)
activate Model

Model -> Patient : addAppointment(appointment)
activate Patient

Patient --> Model
deactivate Patient

Model -> Model : setPerson(person, updatedPatient)
activate Model

Model --> Model
deactivate Model

Model --> AddAppointmentCommand
deactivate Model

create CommandResult
AddAppointmentCommand -> CommandResult
activate CommandResult

CommandResult --> AddAppointmentCommand
deactivate CommandResult

AddAppointmentCommand --> LogicManager : result
deactivate AddAppointmentCommand

[<-- LogicManager
deactivate LogicManager

@enduml
